version: '3'
services:
  redis:
    image: redis:4.0.5-alpine
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    ports:
      - "6379:6379"
    networks:
      - redis-net
    volumes:
      - redis-data:/data
    restart: always

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - wurstmeister-net
    restart: always

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    networks:
      - wurstmeister-net
    environment:
      KAFKA_LISTENERS: INTERNAL_PLAINTEXT://0.0.0.0:9092,EXTERNAL_PLAINTEXT://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL_PLAINTEXT://kafka:9092,EXTERNAL_PLAINTEXT://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL_PLAINTEXT:PLAINTEXT,EXTERNAL_PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL_PLAINTEXT
      AUTO_CREATE_TOPICS: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - //var/run/docker.sock:/var/run/docker.sock
    restart: always

  cassandra:
    image: cassandra
    networks:
      - cassandra-net
    ports:
      - "9042:9042" # native protocol clients
      - "9160:9160" # thrift clients
    volumes:
      - cassandra-data:/var/lib/cassandra
    restart: always

networks:
  redis-net:
  wurstmeister-net:
  cassandra-net:

volumes:
  redis-data:
  cassandra-data: